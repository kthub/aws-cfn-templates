##
## base-template
##
AWSTemplateFormatVersion: "2010-09-09"
Description: base-template

# --------------------------
# Parameters
#---------------------------
Parameters:
  TagKey:
    Type: String
    Default: created-by
  TagValue:
    Type: String
    Default: "keiichi tsuda"

# --------------------------
# Resources
#---------------------------
Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: vpc-base
        - Key: !Sub ${TagKey}
          Value: !Sub ${TagValue}
  # InternetGateway
  InternetGateway: 
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: Name
          Value: igw-base
  InternetGatewayAttachment: 
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  # Subnet
  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt VPC.CidrBlock, 4, 8 ]]
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: pubnet01
  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt VPC.CidrBlock, 4, 8 ]]
      VpcId: !Ref VPC 
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: pubnet02
  PrivateSubnet01:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt VPC.CidrBlock, 4, 8 ]]
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: prvnet01
  PrivateSubnet02:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt VPC.CidrBlock, 4, 8 ]]
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: prvnet02
  # RouteTable
  PublicRouteTable01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: pubrt01
  PublicRouteTable02:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC 
      Tags: 
        - Key: Name
          Value: pubrt02
  PublicRoute01:
    Type: AWS::EC2::Route
    DependsOn: 
      - InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable01
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
  PublicRoute02:
    Type: AWS::EC2::Route
    DependsOn: 
      - InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable02
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
  # RouteTable -> Subnet
  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      SubnetId: !Ref PublicSubnet01
      RouteTableId: !Ref PublicRouteTable01
  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      SubnetId: !Ref PublicSubnet02
      RouteTableId: !Ref PublicRouteTable02

# --------------------------
# Outputs
#---------------------------
Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: vpc-base
  PublicSubnet01:
    Value: !Ref PublicSubnet01
    Export:
      Name: pubnet01
  PublicSubnet02:
    Value: !Ref PublicSubnet02
    Export:
      Name: pubnet02
  PrivateSubnet01:
    Value: !Ref PrivateSubnet01
    Export:
      Name: prvnet01
  PrivateSubnet02:
    Value: !Ref PrivateSubnet02
    Export:
      Name: prvnet02